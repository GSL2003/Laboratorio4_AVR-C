
Prelab_4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000214  00000288  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000214  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000028e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000300  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000072f  00000000  00000000  00000338  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000646  00000000  00000000  00000a67  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000031c  00000000  00000000  000010ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  000013cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003aa  00000000  00000000  00001440  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000063  00000000  00000000  000017ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  0000184d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 c2 00 	jmp	0x184	; 0x184 <__vector_4>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e1       	ldi	r30, 0x14	; 20
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 68 00 	call	0xd0	; 0xd0 <main>
  8e:	0c 94 08 01 	jmp	0x210	; 0x210 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <setup>:

void setup(void){
	//Configuración de salidas//
	
	// - Pines del puerto D
	DDRD = 0xFF;
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0;
  9a:	1b b8       	out	0x0b, r1	; 11
	// Configurar Pines RX y TX para usarlas comos Salidas (PD0 - PD1)
	UCSR0B = 0;
  9c:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	
	// - Pines del puerto B
	DDRB = 0b00111111;
  a0:	8f e3       	ldi	r24, 0x3F	; 63
  a2:	84 b9       	out	0x04, r24	; 4
	PORTB = 0;
  a4:	15 b8       	out	0x05, r1	; 5
	
	//Configurar PC2, PC3 y PC4 como salidas - No afectar las entradas de PC0 y PC1
	DDRC |= (1<<PC2)|(1<<PC3)|(1<<PC4);
  a6:	87 b1       	in	r24, 0x07	; 7
  a8:	8c 61       	ori	r24, 0x1C	; 28
  aa:	87 b9       	out	0x07, r24	; 7
	
	// Configuración de las entradas//

	// Configurar PC0 y PC1 como entradas
	DDRC &= ~((1 << PC0) | (1 << PC1));
  ac:	87 b1       	in	r24, 0x07	; 7
  ae:	8c 7f       	andi	r24, 0xFC	; 252
  b0:	87 b9       	out	0x07, r24	; 7

	// Habilitar resistencias de PULL-UP para PC0 y PC1
	PORTC |= (1 << PC0) | (1 << PC1);
  b2:	88 b1       	in	r24, 0x08	; 8
  b4:	83 60       	ori	r24, 0x03	; 3
  b6:	88 b9       	out	0x08, r24	; 8
  b8:	08 95       	ret

000000ba <b_inter>:
	
}

void b_inter(void){
	// INTERRUPCION PARA PUERTO C
	PCICR |= (1<<PCIE1);					//PCIE1 -  PCINT[14:8] -> equivale de PC0 a PC6
  ba:	e8 e6       	ldi	r30, 0x68	; 104
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	82 60       	ori	r24, 0x02	; 2
  c2:	80 83       	st	Z, r24
	// HABILITAR PARA PCINT1
	PCMSK1 |= ((1<<PCINT8)|(1<<PCINT9));	//Al trabajar en PCIE1 se debe usar PCMSK1
  c4:	ec e6       	ldi	r30, 0x6C	; 108
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	83 60       	ori	r24, 0x03	; 3
  cc:	80 83       	st	Z, r24
  ce:	08 95       	ret

000000d0 <main>:
unsigned char Boton2_LS2 = 2;
unsigned char Boton2_S2 = 1;

int main(void)
{
	setup();
  d0:	0e 94 4b 00 	call	0x96	; 0x96 <setup>
	b_inter();
  d4:	0e 94 5d 00 	call	0xba	; 0xba <b_inter>
	
	sei();
  d8:	78 94       	sei
	
	while(1)
	{
		if (Bi_contador > 255){
  da:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Bi_contador>
  de:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <Bi_contador+0x1>
  e2:	8f 3f       	cpi	r24, 0xFF	; 255
  e4:	91 05       	cpc	r25, r1
  e6:	29 f0       	breq	.+10     	; 0xf2 <main+0x22>
  e8:	24 f0       	brlt	.+8      	; 0xf2 <main+0x22>
			Bi_contador = 0;
  ea:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <Bi_contador+0x1>
  ee:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <Bi_contador>
		}
		if (Bi_contador < 0){
  f2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Bi_contador>
  f6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <Bi_contador+0x1>
  fa:	99 23       	and	r25, r25
  fc:	34 f4       	brge	.+12     	; 0x10a <main+0x3a>
			Bi_contador = 255;
  fe:	8f ef       	ldi	r24, 0xFF	; 255
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <Bi_contador+0x1>
 106:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <Bi_contador>
		}
			
		PORTB = Bi_contador;
 10a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Bi_contador>
 10e:	85 b9       	out	0x05, r24	; 5
			
		// -> Configuración del PD7 y PC2
		
		if ((Bi_contador > 63)&&(Bi_contador < 128)){
 110:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Bi_contador>
 114:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <Bi_contador+0x1>
 118:	80 54       	subi	r24, 0x40	; 64
 11a:	91 09       	sbc	r25, r1
 11c:	80 34       	cpi	r24, 0x40	; 64
 11e:	91 05       	cpc	r25, r1
 120:	20 f4       	brcc	.+8      	; 0x12a <main+0x5a>
			PORTC |= (1<<PC2);		//Se incluye "|" para indicar el PIN especifico del puerto C que se esta empelando 
 122:	88 b1       	in	r24, 0x08	; 8
 124:	84 60       	ori	r24, 0x04	; 4
 126:	88 b9       	out	0x08, r24	; 8
 128:	03 c0       	rjmp	.+6      	; 0x130 <main+0x60>
		} else {
			PORTC &= ~(1<<PC2);		//Se incluye "&" para indicar el PIN especifico del puerto C que se esta apagando
 12a:	88 b1       	in	r24, 0x08	; 8
 12c:	8b 7f       	andi	r24, 0xFB	; 251
 12e:	88 b9       	out	0x08, r24	; 8
		}

		if (Bi_contador > 127){
 130:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Bi_contador>
 134:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <Bi_contador+0x1>
 138:	80 38       	cpi	r24, 0x80	; 128
 13a:	91 05       	cpc	r25, r1
 13c:	24 f0       	brlt	.+8      	; 0x146 <main+0x76>
			PORTD |= (1<<PD7);		//Se incluye "|" para indicar el PIN especifico del puerto D que se esta empelando
 13e:	8b b1       	in	r24, 0x0b	; 11
 140:	80 68       	ori	r24, 0x80	; 128
 142:	8b b9       	out	0x0b, r24	; 11
 144:	03 c0       	rjmp	.+6      	; 0x14c <main+0x7c>
		} else {
			PORTD &= ~(1<<PD7);		//Se incluye "&" para indicar el PIN especifico del puerto D que se esta apagando
 146:	8b b1       	in	r24, 0x0b	; 11
 148:	8f 77       	andi	r24, 0x7F	; 127
 14a:	8b b9       	out	0x0b, r24	; 11
		}
		
		if (Bi_contador > 191){
 14c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Bi_contador>
 150:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <Bi_contador+0x1>
 154:	80 3c       	cpi	r24, 0xC0	; 192
 156:	91 05       	cpc	r25, r1
 158:	24 f0       	brlt	.+8      	; 0x162 <main+0x92>
			PORTC |= (1<<PC2);		//Se incluye "|" para indicar el PIN especifico del puerto C que se esta empelando
 15a:	88 b1       	in	r24, 0x08	; 8
 15c:	84 60       	ori	r24, 0x04	; 4
 15e:	88 b9       	out	0x08, r24	; 8
 160:	03 c0       	rjmp	.+6      	; 0x168 <main+0x98>
			} else {
			PORTC &= ~(1<<PC2);		//Se incluye "&" para indicar el PIN especifico del puerto C que se esta apagando
 162:	88 b1       	in	r24, 0x08	; 8
 164:	8b 7f       	andi	r24, 0xFB	; 251
 166:	88 b9       	out	0x08, r24	; 8
		}
		
		if (Bi_contador < 0){
 168:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <Bi_contador>
 16c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <Bi_contador+0x1>
 170:	99 23       	and	r25, r25
 172:	0c f0       	brlt	.+2      	; 0x176 <main+0xa6>
 174:	b2 cf       	rjmp	.-156    	; 0xda <main+0xa>
			PORTD &= ~(1<<PD7);
 176:	8b b1       	in	r24, 0x0b	; 11
 178:	8f 77       	andi	r24, 0x7F	; 127
 17a:	8b b9       	out	0x0b, r24	; 11
			PORTC &= ~(1<<PC2);
 17c:	88 b1       	in	r24, 0x08	; 8
 17e:	8b 7f       	andi	r24, 0xFB	; 251
 180:	88 b9       	out	0x08, r24	; 8
 182:	ab cf       	rjmp	.-170    	; 0xda <main+0xa>

00000184 <__vector_4>:
	PCICR |= (1<<PCIE1);					//PCIE1 -  PCINT[14:8] -> equivale de PC0 a PC6
	// HABILITAR PARA PCINT1
	PCMSK1 |= ((1<<PCINT8)|(1<<PCINT9));	//Al trabajar en PCIE1 se debe usar PCMSK1
}

ISR(PCINT1_vect){
 184:	1f 92       	push	r1
 186:	0f 92       	push	r0
 188:	0f b6       	in	r0, 0x3f	; 63
 18a:	0f 92       	push	r0
 18c:	11 24       	eor	r1, r1
 18e:	2f 93       	push	r18
 190:	3f 93       	push	r19
 192:	8f 93       	push	r24
 194:	9f 93       	push	r25
	Boton1_S1 = PINC&(1<<PINC0);
 196:	96 b1       	in	r25, 0x06	; 6
 198:	91 70       	andi	r25, 0x01	; 1
 19a:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <Boton1_S1>
	Boton2_S2 = PINC&(1<<PINC1);
 19e:	86 b1       	in	r24, 0x06	; 6
 1a0:	82 70       	andi	r24, 0x02	; 2
 1a2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	
	if ((Boton1_S1 == 0)&&(Boton1_LS1 == 1)){
 1a6:	91 11       	cpse	r25, r1
 1a8:	10 c0       	rjmp	.+32     	; 0x1ca <__vector_4+0x46>
 1aa:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <Boton1_LS1>
 1ae:	21 30       	cpi	r18, 0x01	; 1
 1b0:	61 f4       	brne	.+24     	; 0x1ca <__vector_4+0x46>
		Boton1_LS1 = 0;
 1b2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <Boton1_LS1>
		Bi_contador ++;
 1b6:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <Bi_contador>
 1ba:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <Bi_contador+0x1>
 1be:	2f 5f       	subi	r18, 0xFF	; 255
 1c0:	3f 4f       	sbci	r19, 0xFF	; 255
 1c2:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <Bi_contador+0x1>
 1c6:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <Bi_contador>
	}
	
	if (Boton1_S1 == 1){
 1ca:	91 30       	cpi	r25, 0x01	; 1
 1cc:	11 f4       	brne	.+4      	; 0x1d2 <__vector_4+0x4e>
		Boton1_LS1 = 1;
 1ce:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <Boton1_LS1>
	}
	
	if ((Boton2_S2 == 0)&&(Boton2_LS2 == 2)){
 1d2:	81 11       	cpse	r24, r1
 1d4:	10 c0       	rjmp	.+32     	; 0x1f6 <__vector_4+0x72>
 1d6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <Boton2_LS2>
 1da:	92 30       	cpi	r25, 0x02	; 2
 1dc:	61 f4       	brne	.+24     	; 0x1f6 <__vector_4+0x72>
		Boton2_LS2 = 0;
 1de:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <Boton2_LS2>
		Bi_contador --;
 1e2:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <Bi_contador>
 1e6:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <Bi_contador+0x1>
 1ea:	21 50       	subi	r18, 0x01	; 1
 1ec:	31 09       	sbc	r19, r1
 1ee:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <Bi_contador+0x1>
 1f2:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <Bi_contador>
	}
	
	if (Boton2_S2 == 2){
 1f6:	82 30       	cpi	r24, 0x02	; 2
 1f8:	11 f4       	brne	.+4      	; 0x1fe <__vector_4+0x7a>
		Boton2_LS2 = 2;
 1fa:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <Boton2_LS2>
	}
}
 1fe:	9f 91       	pop	r25
 200:	8f 91       	pop	r24
 202:	3f 91       	pop	r19
 204:	2f 91       	pop	r18
 206:	0f 90       	pop	r0
 208:	0f be       	out	0x3f, r0	; 63
 20a:	0f 90       	pop	r0
 20c:	1f 90       	pop	r1
 20e:	18 95       	reti

00000210 <_exit>:
 210:	f8 94       	cli

00000212 <__stop_program>:
 212:	ff cf       	rjmp	.-2      	; 0x212 <__stop_program>
